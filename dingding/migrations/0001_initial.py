# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-29 07:09
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsTaskresult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(max_length=50)),
                ('content_type', models.CharField(max_length=128)),
                ('content_encoding', models.CharField(max_length=64)),
                ('result', models.TextField(blank=True, null=True)),
                ('date_done', models.DateTimeField()),
                ('traceback', models.TextField(blank=True, null=True)),
                ('hidden', models.BooleanField()),
                ('meta', models.TextField(blank=True, null=True)),
                ('task_args', models.TextField(blank=True, null=True)),
                ('task_kwargs', models.TextField(blank=True, null=True)),
                ('task_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'django_celery_results_taskresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DingCallbackFlowinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('people', models.CharField(max_length=32)),
                ('flow_date', models.DateField()),
                ('flow_time', models.TimeField()),
                ('time1', models.FloatField(blank=True, null=True)),
                ('volume1', models.FloatField(blank=True, null=True)),
                ('time2', models.FloatField(blank=True, null=True)),
                ('volume2', models.FloatField(blank=True, null=True)),
                ('time3', models.FloatField(blank=True, null=True)),
                ('volume3', models.FloatField(blank=True, null=True)),
                ('diameter', models.FloatField(blank=True, null=True)),
                ('mud_depth', models.FloatField(blank=True, null=True)),
                ('cicle_lequid_level1', models.FloatField(blank=True, null=True)),
                ('cicle_instantaneous_flow_rate1', models.FloatField(blank=True, null=True)),
                ('cicle_lequid_level2', models.FloatField(blank=True, null=True)),
                ('cicle_instantaneous_flow_rate2', models.FloatField(blank=True, null=True)),
                ('cicle_lequid_level3', models.FloatField(blank=True, null=True)),
                ('cicle_instantaneous_flow_rate3', models.FloatField(blank=True, null=True)),
                ('canal_width', models.FloatField(blank=True, null=True)),
                ('square_lequid_level1', models.FloatField(blank=True, null=True)),
                ('square_instantaneous_flow_rate1', models.FloatField(blank=True, null=True)),
                ('square_lequid_level2', models.FloatField(blank=True, null=True)),
                ('square_instantaneous_flow_rate2', models.FloatField(blank=True, null=True)),
                ('square_lequid_level3', models.FloatField(blank=True, null=True)),
                ('square_instantaneous_flow_rate3', models.FloatField(blank=True, null=True)),
                ('machine_flow', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ding_callback_flowinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DingCallbackMonitorpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('geophysical_point', models.CharField(max_length=64, unique=True)),
                ('is_monitor', models.IntegerField()),
                ('not_monitor_reason', models.CharField(blank=True, max_length=512, null=True)),
                ('work_function', models.IntegerField()),
                ('exterior_photo', models.CharField(blank=True, max_length=512, null=True)),
                ('water_flow_photo', models.CharField(blank=True, max_length=512, null=True)),
                ('status_photo', models.CharField(blank=True, max_length=512, null=True)),
                ('probe_photo', models.CharField(blank=True, max_length=512, null=True)),
                ('machine_photo', models.CharField(blank=True, max_length=512, null=True)),
                ('setup_photo', models.CharField(blank=True, max_length=512, null=True)),
                ('work_photo', models.CharField(blank=True, max_length=512, null=True)),
                ('people', models.CharField(max_length=32)),
                ('start_time', models.DateField()),
            ],
            options={
                'db_table': 'ding_callback_monitorpoint',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DingCallbackSampleinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('people', models.CharField(max_length=32)),
                ('sample_date', models.DateField()),
                ('sample_time', models.TimeField()),
                ('sample_number', models.CharField(max_length=32)),
                ('sample_photo', models.CharField(max_length=512)),
                ('sample_color', models.CharField(max_length=32)),
                ('sample_odor', models.CharField(max_length=32)),
                ('sample_turbidity', models.CharField(max_length=32)),
                ('ss', models.CharField(blank=True, db_column='SS', max_length=32, null=True)),
                ('nh3_n', models.CharField(blank=True, db_column='NH3_N', max_length=32, null=True)),
                ('tp', models.CharField(blank=True, db_column='TP', max_length=32, null=True)),
                ('tn', models.CharField(blank=True, db_column='TN', max_length=32, null=True)),
                ('cod', models.CharField(blank=True, db_column='COD', max_length=32, null=True)),
                ('bod', models.CharField(blank=True, db_column='BOD', max_length=32, null=True)),
                ('ais', models.CharField(blank=True, db_column='AIS', max_length=32, null=True)),
                ('afvo', models.CharField(blank=True, db_column='AFVO', max_length=32, null=True)),
                ('do', models.CharField(blank=True, db_column='DO', max_length=32, null=True)),
                ('flow', models.CharField(blank=True, db_column='FLOW', max_length=32, null=True)),
                ('cr', models.CharField(blank=True, db_column='CR', max_length=32, null=True)),
                ('orp', models.CharField(blank=True, db_column='ORP', max_length=32, null=True)),
                ('sinkables', models.CharField(blank=True, db_column='SinkableS', max_length=32, null=True)),
                ('sulfide', models.CharField(blank=True, db_column='Sulfide', max_length=32, null=True)),
                ('cyanide', models.CharField(blank=True, db_column='Cyanide', max_length=32, null=True)),
                ('monitor_task', models.CharField(max_length=128)),
                ('sample_count', models.IntegerField()),
                ('monitor_point', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dingding.DingCallbackMonitorpoint')),
            ],
            options={
                'db_table': 'ding_callback_sampleinfo',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='dingcallbackflowinfo',
            name='monitor_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dingding.DingCallbackMonitorpoint'),
        ),
    ]
